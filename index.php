<html>
       <head>
        	<title>PHP-1</title>

        </head>	
	<body>
		<h1>PHP</h1>
		<p>1 урок<br><br></p>
		<p>1. сервер запустил, были сложности, порт 80 был занят драйвером... </p>
		<p>2. мануал в закладки добавил</p> 

		
			
		<p>3.1. 3/1 -> <?php echo var_dump(3/1);  ?><br></p>
		<p>3.2. 1/3 -> <?php echo var_dump(1/3);  ?><br></p>
		<p>3.3. '20cats' + 40 -> <?php echo var_dump('20cats' + 40);  ?><br></p>
		<p>3.4. 18%4 -> <?php echo var_dump(18%4);  ?> //деление по модулю, целочисленный остаток от деления 18/4=4,5, т.е 4 <br></p>

		<p>4.1. echo ($a = 2); -> <?php echo ($a = 2);  ?><br></p>
		<p>4.2. $x=($y=12)-8; echo $x; -> <?php $x=($y=12)-8; echo $x;  ?><br></p>
		<p>Вывод: значением выражения присваивания может быть как конкретное значение так и переменная и математическая, логическая операция и т.д. <br></p>
	

		<p>5.1. 1==1.0 -> <?php echo var_dump(1==1.0);  ?> //после преобразования типов, значения равны. <br></p>
		<p>5.2. 1===1.0 -> <?php echo var_dump(1===1.0);  ?> //разные типы, не тождественны <br></p>
		<p>5.3. '02'==2 -> <?php echo var_dump('02'==2);  ?> //после преобразования типов  - равны <br></p>
		<p>5.4. '02'===2 -> <?php echo var_dump('02'===2);  ?> // разные типы, не тождественны<br></p>

		<p>6.1. $x1=true xor true -> <?php $x1=(true xor true); echo var_dump($x1);  ?> //это логический оператор исключающее ИЛИ, если заключить в скобки, работает корректно - false, если без скобок, то переменной присваивается true  <br></p>
		                                                     
       </body>
		
</html>	